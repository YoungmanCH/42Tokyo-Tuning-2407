user nginx;
worker_processes auto;

error_log off;
pid /var/run/nginx.pid;

worker_rlimit_nofile 8192;

events {
    worker_connections 2048;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';

    access_log off;

    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;

    keepalive_timeout 65;

    # Enable gzip compression
    gzip on;
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;
    gzip_proxied any;
    gzip_min_length 1000;
    gzip_comp_level 6;
    gzip_vary on;

    # Buffer size adjustments
    client_max_body_size 16M;
    client_body_buffer_size 128k;
    proxy_buffer_size 128k;
    proxy_buffers 4 256k;
    proxy_busy_buffers_size 256k;
    proxy_temp_file_write_size 256k;

    # Caching configuration
    proxy_cache_path /var/cache/nginx levels=1:2 keys_zone=my_cache:10m max_size=10g inactive=60m use_temp_path=off;

    upstream frontend {
        server frontend:3000;
        keepalive 32;
    }

    upstream backend {
        server backend:8080;
        keepalive 32;
    }

    server {
        listen 443 ssl http2;

        ssl_certificate /da/tls/fullchain1.pem;
        ssl_certificate_key /da/tls/privkey1.pem;

        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers HIGH:!aNULL:!MD5;

        location / {
            proxy_pass http://frontend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            expires 1h;  # Cache duration for static content
        }

        location /api/ {
            proxy_pass http://backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location /api/v1/users/user-icon/ {
            proxy_cache my_cache;
            add_header X-Proxy-Cache $upstream_cache_status;

            proxy_pass http://backend;
            proxy_set_header Host $host;
            proxy_cache_valid 200 302 60m;
            proxy_cache_valid 404 1m;
        }
    }
    
    server {
        listen 80;

        return 301 https://$host$request_uri;
    }

    include /etc/nginx/conf.d/*.conf;
}